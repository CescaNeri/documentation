openapi: "3.0.3"
info:
  version: 0.0.1
  title: Area of Service
  license:
    name: MIT
#servers:
  #- url: http://localhost:8080/v0
paths:
  /areas:
    get:
      summary: List all choosen areas
      operationId: listAreas
      tags:
        - areas
      parameters:
#        - name: biggerThan
#          in: query
#          description: A filter for areas
#          required: false
#          schema: 
#            $ref: "#/components/schemas/Shape"

        - name: page
          in: query
          description: Which page choosen
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: How many areas in each page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: A paged array of areas
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Areas"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new area
      operationId: createArea
      tags:
        - areas
      responses:
        201:
          description: Null response # or area id (?)
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /areas/{areaId}:
    get:
      summary: Info for a specific area
      operationId: showAreaById
      tags:
        - areas
      parameters:
        - name: areaId
          in: path
          required: true
          description: The id of the area to retrieve
          schema:
            type: string
      responses:
        200:
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Areas"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    $ref: "../../Common/CommonSchemas.yaml"
    Area:
      required:
        - id
        - scooters
        - shape
      properties:
        id: 
          $ref: "#/components/schemas/EntityId"
        scooters:
          type: array
          items: 
            $ref: "#/components/schemas/EntityId"
        tag:
          type: string
    Areas:
      type: array
      items:
        $ref: "#/components/schemas/Area"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string